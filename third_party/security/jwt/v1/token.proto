syntax = "proto3";

package security.jwt.v1;

import "gnostic/openapi/v3/annotations.proto";
import "google/protobuf/duration.proto";
import "google/protobuf/timestamp.proto";
import "validate/validate.proto";

option cc_enable_arenas = true;
option csharp_namespace = "OrigAdmin.Runtime.Security.JWT.V1";
option go_package = "github.com/origadmin/runtime/gen/go/security/jwt/v1;jwtv1";
option java_multiple_files = true;
option java_outer_classname = "JWTProto";
option java_package = "com.github.origadmin.runtime.security.jwt.v1";
option objc_class_prefix = "ORST";
option php_namespace = "OrigAdmin\\Runtime\\Security\\JWT\\V1";

// PWT is a web token that can be used to authenticate a user with protobuf services.
message Token {
  string client_id = 1 [
    json_name = "client_id",
    (gnostic.openapi.v3.property) = {description: "The client ID associated with the token."}
  ];
  string user_id = 2 [
    json_name = "user_id",
    (validate.rules).string.min_len = 1,
    (gnostic.openapi.v3.property) = {description: "The ID of the user associated with the token."}
  ];
  string access_token = 10 [
    json_name = "access_token",
    (validate.rules).string.min_len = 1,
    (gnostic.openapi.v3.property) = {description: "The web access token used for authentication."}
  ];
  string refresh_token = 11 [
    json_name = "refresh_token",
    (validate.rules).string.min_len = 1,
    (gnostic.openapi.v3.property) = {description: "The refresh token used to obtain a new access token."}
  ];
  int64 expiration_time = 12 [
    json_name = "expiration_time",
    (gnostic.openapi.v3.property) = {description: "The expiration time of the token."}
  ];
}
