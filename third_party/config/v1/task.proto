syntax = "proto3";

package config.v1;

import "validate/validate.proto";

option cc_enable_arenas = true;
option go_package = "github.com/origadmin/runtime/gen/go/config/v1;configv1";
option java_multiple_files = true;
option java_outer_classname = "TaskProto";
option java_package = "com.github.origadmin.runtime.config.v1";
option objc_class_prefix = "ORC";

// Task config
message Task {

  // Asynq config
  message Asynq {
    // endpoint is peer network address
    string endpoint = 1;
    // login password
    string password = 2;
    // database index
    int32 db = 3;
    // timezone location
    string location = 4;
  }

  // Machinery config
  message Machinery {
    // brokers address, which can be specified as Redis, AMQP, or AWS SQS according to the actual storage medium used
    repeated string brokers = 1;
    // backends configures the media for storing results. The value can be Redis, memcached, or mongodb as required
    repeated string backends = 2;
  }

  // Cron config
  message Cron {
    // addr is peer network address
    string addr = 1;
  }

  string type = 1 [json_name = "type", (validate.rules).string = {in: ["none", "asynq", "machinery", "cron"]}];
  string name = 2 [json_name = "name"];

  Asynq asynq = 3 [json_name = "asynq"];
  Machinery machinery = 4 [json_name = "machinery"];
  Cron cron = 5 [json_name = "cron"];
}
