syntax = "proto3";

package config.v1;

option cc_enable_arenas = true;
option go_package = "github.com/origadmin/runtime/gen/go/config/v1;configv1";
option java_multiple_files = true;
option java_outer_classname = "LoggerProto";
option java_package = "com.github.origadmin.runtime.config.v1";
option objc_class_prefix = "ORC";

// Logger level
enum LoggerLevel {
  LOGGER_LEVEL_UNSPECIFIED = 0;
  LOGGER_LEVEL_DEBUG = 1;
  LOGGER_LEVEL_INFO = 2;
  LOGGER_LEVEL_WARN = 3;
  LOGGER_LEVEL_ERROR = 4;
  LOGGER_LEVEL_FATAL = 5;
}
// Logger hook message
message LoggerHookMessage {
  LoggerLevel level = 1 [json_name = "level"];
  string message = 2 [json_name = "message"];
  string stacktrace = 3 [json_name = "stacktrace"];
  string error = 4 [json_name = "error"];
  map<string, string> fields = 5 [json_name = "fields"];
}

// Logger
message Logger {
  // Logger file
  message File {
    string path = 1 [json_name = "path"];
    bool lumberjack = 2 [json_name = "lumberjack"];
    bool compress = 3 [json_name = "compress"];
    bool local_time = 4 [json_name = "local_time"];
    string max_size = 5 [json_name = "max_size"];
    string max_age = 6 [json_name = "max_age"];
    string max_backups = 7 [json_name = "max_backups"];
  }

  // Dev logger
  message DevLogger {
    uint32 max_slice = 1 [json_name = "max_slice"];
    bool sort_keys = 2 [json_name = "sort_keys"];
    bool newline = 3 [json_name = "newline"];
    bool indent = 4 [json_name = "indent"];
    uint32 debug_color = 5 [json_name = "debug_color"];
    uint32 info_color = 6 [json_name = "info_color"];
    uint32 warn_color = 7 [json_name = "warn_color"];
    uint32 error_color = 8 [json_name = "error_color"];
    uint32 max_trace = 9 [json_name = "max_trace"];
    bool formatter = 10 [json_name = "formatter"];
  }

  // Disable logger
  bool disabled = 1 [json_name = "disabled"];
  // Enable dev logger output
  bool develop = 2 [json_name = "develop"];
  // Set default logger
  bool default = 3 [json_name = "default"];
  // Logger name
  string name = 4 [json_name = "name"];
  // Logger format json text or tint
  string format = 5 [json_name = "format"];
  // Logger level
  LoggerLevel level = 6 [json_name = "level"];
  // Logger output stdout
  bool stdout = 7 [json_name = "stdout"];
  // Disable logger caller
  bool disable_caller = 8 [json_name = "disable_caller"];
  // Logger caller skip
  uint32 caller_skip = 9 [json_name = "caller_skip"];
  // Logger time format
  string time_format = 10 [json_name = "time_format"];

  // Logger file output config
  File file = 100 [json_name = "file"];
  // Logger dev logger config
  DevLogger dev_logger = 101 [json_name = "dev_logger"]; //DevLogger
}