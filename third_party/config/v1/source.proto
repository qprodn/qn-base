syntax = "proto3";

package config.v1;

import "validate/validate.proto";

option cc_enable_arenas = true;
option go_package = "github.com/origadmin/runtime/gen/go/config/v1;configv1";
option java_multiple_files = true;
option java_outer_classname = "SourceConfigProto";
option java_package = "com.github.origadmin.runtime.config.v1";
option objc_class_prefix = "ORC";

// SourceConfig is the source file for load configuration
message SourceConfig {
  // File
  message File {
    string path = 1 [json_name = "path"];
    string format = 2 [json_name = "format"];
  }
  // Consul
  message Consul {
    string address = 1 [json_name = "address"];
    string scheme = 2 [json_name = "scheme"];
    string token = 3 [json_name = "token"];
    string path = 4 [json_name = "path"];
    //  bool heart_beat = 4 [json_name = "heart_beat"];
    //  bool health_check = 5 [json_name = "health_check"];
    //  string datacenter = 6 [json_name = "datacenter"];
    //  string tag = 7 [json_name = "tag"];
    //  string health_check_interval = 8 [json_name = "health_check_interval"];
    //  string health_check_timeout = 9[json_name = "health_check_timeout"];
  }
  // ETCD
  message ETCD {
    repeated string endpoints = 1 [json_name = "endpoints"];
  }

  string type = 1 [
    json_name = "type",
    (validate.rules).string = {
      in: [
        "none",
        "file",
        "consul",
        "etcd",
        "nacos",
        "apollo",
        "kubernetes",
        "polaris"
      ]
    }
  ]; // Type
  // name
  string name = 2 [json_name = "name"];
  // set the supported file format, if not set, all formats are supported
  repeated string formats = 3 [json_name = "formats"];
  bool env = 5 [json_name = "env"];
  // set the environment variable name
  map<string, string> env_args = 6 [json_name = "env_args"];
  // set the environment variable prefix
  repeated string env_prefixes = 7 [json_name = "env_prefixes"];

  optional File file = 100 [json_name = "file"];
  optional Consul consul = 200 [json_name = "consul"];
  optional ETCD etcd = 300 [json_name = "etcd"];
}
