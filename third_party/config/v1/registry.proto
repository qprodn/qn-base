syntax = "proto3";

package config.v1;

import "google/protobuf/any.proto";
import "google/protobuf/duration.proto";
import "validate/validate.proto";

option cc_enable_arenas = true;
option go_package = "github.com/origadmin/runtime/gen/go/config/v1;configv1";
option java_multiple_files = true;
option java_outer_classname = "RegistryProto";
option java_package = "com.github.origadmin.runtime.config.v1";
option objc_class_prefix = "ORC";

// Registry
message Registry {
  // Consul
  message Consul {
    string address = 1 [json_name = "address"];
    string scheme = 2 [json_name = "scheme"];
    string token = 3 [json_name = "token"];
    bool heart_beat = 4 [json_name = "heart_beat"];
    bool health_check = 5 [json_name = "health_check"];
    string datacenter = 6 [json_name = "datacenter"];
    //  string tag = 7 [json_name = "tag"];
    uint32 health_check_interval = 8 [json_name = "health_check_interval"];
    //  string health_check_timeout = 9[json_name = "health_check_timeout"];
    int64 timeout = 10 [json_name = "timeout"];
    uint32 deregister_critical_service_after = 11 [json_name = "deregister_critical_service_after"];
  }
  // ETCD
  message ETCD {
    repeated string endpoints = 1 [json_name = "endpoints"];
  }
  message Custom {
    google.protobuf.Any config = 1 [json_name = "config"];
  }

  string type = 1 [(validate.rules).string = {
    in: [
      "none",
      "consul",
      "etcd",
      "nacos",
      "apollo",
      "kubernetes",
      "polaris"
    ]
  }]; // Type
  string service_name = 2 [json_name = "service_name"]; // ServiceName
  bool debug = 5 [json_name = "debug"];

  optional Consul consul = 300 [json_name = "consul"]; // Consul
  optional ETCD etcd = 400 [json_name = "etcd"]; // ETCD
}
