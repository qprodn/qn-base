syntax = "proto3";

package config.v1;

import "google/protobuf/duration.proto";
import "validate/validate.proto";

option cc_enable_arenas = true;
option go_package = "github.com/origadmin/runtime/gen/go/config/v1;configv1";
option java_multiple_files = true;
option java_outer_classname = "SecurityProto";
option java_package = "com.github.origadmin.runtime.config.v1";
option objc_class_prefix = "ORC";

// AuthNConfig contains the configuration for authentication middleware.
message AuthNConfig {
  // Authorization middleware config
  message JWTConfig {
    // Algorithm used to sign the token
    string algorithm = 3 [json_name = "algorithm"];
    // Signing key
    string signing_key = 4 [json_name = "signing_key"];
    // Old signing key
    string old_signing_key = 5 [json_name = "old_signing_key"];
    // Token expiration time
    int64 expire_time = 6 [json_name = "expire_time"];
    // Token refresh time
    int64 refresh_time = 7 [json_name = "refresh_time"];
    // Cache config name from cache service
    string cache_name = 8 [json_name = "cache_name"];
  }
  // OIDC config for authorization
  message OIDCConfig {
    // Issuer url
    string issuer_url = 2 [json_name = "issuer_url"];
    // Audience
    string audience = 3 [json_name = "audience"];
    // Algorithm used to sign the token
    string algorithm = 4 [json_name = "algorithm"];
  }
  message PreSharedKeyConfig {
    // Secret key
    repeated string secret_keys = 2 [json_name = "secret_keys"];
  }
  message BasicAuthConfig {
    //      string username = 1;
    //      string password = 2;
  }
  message OAuth2Config {
    //      string client_id = 1;
    //      string client_secret = 2;
    //      string token_url = 3;
    //      string scope = 4;
    //      string redirect_uri = 5;
  }
  message LdapConfig {
    //      string server_url = 1;
    //      string base_dn = 2;
    //      string bind_dn = 3;
    //      string bind_password = 4;
    //      string search_filter = 5;
  }
  message X509Config {
    //      string cert_file = 1;
    //      string key_file = 2;
    //      string ca_file = 3;
  }
  message SamlConfig {
    //      string idp_metadata_url = 1;
    //      string sp_entity_id = 2;
    //      string acs_url = 3;
    //      string certificate_file = 4;
    //      string private_key_file = 5;
  }
  message ApiKeyConfig {
    //      string api_key = 1;
  }

  // Disable security middleware
  bool disabled = 1 [json_name = "disabled"];
  // Direct release paths
  repeated string public_paths = 2 [json_name = "public_paths"];
  // Type of authentication noop, jwt, oidc, pre_shared_key, etc
  string type = 3 [
    json_name = "type",
    (validate.rules).string = {
      in: [
        "noop",
        "jwt",
        "oidc",
        "pre_shared_key",
        "basic_auth",
        "oauth2",
        "ldap",
        "x509",
        "saml",
        "api_key"
      ]
    }
  ];
  // JWT config for authorization
  JWTConfig jwt = 10 [json_name = "jwt"];
  // OIDC config for authorization
  OIDCConfig oidc = 11 [json_name = "oidc"];
  // Pre shared key config for authorization
  PreSharedKeyConfig pre_shared_key = 12 [json_name = "pre_shared_key"];
  // Customize config
}

// AuthZConfig contains the configuration for authorization middleware.
message AuthZConfig {
  // Casbin middleware config
  message CasbinConfig {
    // Policy file
    string policy_file = 3 [json_name = "policy_file"];
    // Model file
    string model_file = 4 [json_name = "model_file"];
  }
  message OpaConfig {
    // OPA policy file path
    string policy_file = 3 [json_name = "policy_file"];
    // OPA data file path
    string data_file = 4 [json_name = "data_file"];
    // OPA server URL
    string server_url = 5 [json_name = "server_url"];
    // OPA rego file path
    string rego_file = 6 [json_name = "rego_file"];
  }
  message ZanzibarConfig {
    // Zanzibar API endpoint
    string api_endpoint = 3 [json_name = "api_endpoint"];
    // Zanzibar namespace
    string namespace = 4 [json_name = "namespace"];
    // Zanzibar read consistency
    string read_consistency = 5 [json_name = "read_consistency"];
    // Zanzibar write consistency
    string write_consistency = 6 [json_name = "write_consistency"];
  }
  // Disable security middleware
  bool disabled = 1 [json_name = "disabled"];
  // Direct release paths
  repeated string public_paths = 2 [json_name = "public_paths"];
  // Type of authorization noop, casbin, opa, etc
  string type = 3 [
    json_name = "type",
    (validate.rules).string = {
      in: [
        "noop",
        "casbin",
        "opa",
        "zanzibar"
      ]
    }
  ];
  // Casbin config for authorization
  CasbinConfig casbin = 11 [json_name = "casbin"];
  // OPA config for authorization
  OpaConfig opa = 12 [json_name = "opa"];
  // Zanzibar config for authorization
  ZanzibarConfig zanzibar = 13 [json_name = "zanzibar"];
}

// Security middleware config.
message Security {
  // Direct release paths
  repeated string public_paths = 1 [json_name = "public_paths"];
  AuthZConfig authz = 2 [json_name = "authz"];
  AuthNConfig authn = 3 [json_name = "authn"];
}
