// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/go-kratos/kratos/v2"
	"github.com/go-kratos/kratos/v2/log"
	systemuser2 "qn-base/app/admin/internal/biz/systemuser"
	"qn-base/app/admin/internal/conf"
	"qn-base/app/admin/internal/data/data"
	"qn-base/app/admin/internal/data/db"
	"qn-base/app/admin/internal/data/systemuser"
	"qn-base/app/admin/internal/server"
	systemuser3 "qn-base/app/admin/internal/service/systemuser"
)

import (
	_ "go.uber.org/automaxprocs"
)

// Injectors from wire.go:

// wireApp init kratos application.
func wireApp(bootstrap *conf.Bootstrap, logger log.Logger) (*kratos.App, func(), error) {
	database := db.NewDB(bootstrap, logger)
	dataData, cleanup, err := data.NewData(logger, database)
	if err != nil {
		return nil, nil, err
	}
	systemUserRepo := systemuser.NewSystemUserRepo(dataData, logger)
	userUsecase := systemuser2.NewUserUsecase(systemUserRepo, logger)
	userService := systemuser3.NewUserService(logger, userUsecase)
	grpcServer := server.NewGRPCServer(bootstrap, userService, logger)
	httpServer := server.NewHTTPServer(bootstrap, userService, logger)
	app := newApp(logger, grpcServer, httpServer)
	return app, func() {
		cleanup()
	}, nil
}
