// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v6.32.0
// source: conf/conf.proto

package conf

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Bootstrap struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Env           *Env                   `protobuf:"bytes,1,opt,name=env,proto3" json:"env,omitempty"`
	Server        *Server                `protobuf:"bytes,2,opt,name=server,proto3" json:"server,omitempty"`
	Data          *Data                  `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	Log           *Log                   `protobuf:"bytes,4,opt,name=log,proto3" json:"log,omitempty"`
	Snowflake     *Snowflake             `protobuf:"bytes,5,opt,name=snowflake,proto3" json:"snowflake,omitempty"`
	Jwt           *Jwt                   `protobuf:"bytes,6,opt,name=jwt,proto3" json:"jwt,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Bootstrap) Reset() {
	*x = Bootstrap{}
	mi := &file_conf_conf_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Bootstrap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Bootstrap) ProtoMessage() {}

func (x *Bootstrap) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Bootstrap.ProtoReflect.Descriptor instead.
func (*Bootstrap) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{0}
}

func (x *Bootstrap) GetEnv() *Env {
	if x != nil {
		return x.Env
	}
	return nil
}

func (x *Bootstrap) GetServer() *Server {
	if x != nil {
		return x.Server
	}
	return nil
}

func (x *Bootstrap) GetData() *Data {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *Bootstrap) GetLog() *Log {
	if x != nil {
		return x.Log
	}
	return nil
}

func (x *Bootstrap) GetSnowflake() *Snowflake {
	if x != nil {
		return x.Snowflake
	}
	return nil
}

func (x *Bootstrap) GetJwt() *Jwt {
	if x != nil {
		return x.Jwt
	}
	return nil
}

type Env struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Active        string                 `protobuf:"bytes,1,opt,name=active,proto3" json:"active,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Env) Reset() {
	*x = Env{}
	mi := &file_conf_conf_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Env) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Env) ProtoMessage() {}

func (x *Env) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Env.ProtoReflect.Descriptor instead.
func (*Env) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{1}
}

func (x *Env) GetActive() string {
	if x != nil {
		return x.Active
	}
	return ""
}

type Server struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Http          *Server_HTTP           `protobuf:"bytes,1,opt,name=http,proto3" json:"http,omitempty"`
	Grpc          *Server_GRPC           `protobuf:"bytes,2,opt,name=grpc,proto3" json:"grpc,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Server) Reset() {
	*x = Server{}
	mi := &file_conf_conf_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Server) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Server) ProtoMessage() {}

func (x *Server) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Server.ProtoReflect.Descriptor instead.
func (*Server) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{2}
}

func (x *Server) GetHttp() *Server_HTTP {
	if x != nil {
		return x.Http
	}
	return nil
}

func (x *Server) GetGrpc() *Server_GRPC {
	if x != nil {
		return x.Grpc
	}
	return nil
}

type Data struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Database      *Data_Database         `protobuf:"bytes,1,opt,name=database,proto3" json:"database,omitempty"`
	Redis         *Data_Redis            `protobuf:"bytes,2,opt,name=redis,proto3" json:"redis,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Data) Reset() {
	*x = Data{}
	mi := &file_conf_conf_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Data) ProtoMessage() {}

func (x *Data) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Data.ProtoReflect.Descriptor instead.
func (*Data) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{3}
}

func (x *Data) GetDatabase() *Data_Database {
	if x != nil {
		return x.Database
	}
	return nil
}

func (x *Data) GetRedis() *Data_Redis {
	if x != nil {
		return x.Redis
	}
	return nil
}

type Log struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Level         string                 `protobuf:"bytes,1,opt,name=level,proto3" json:"level,omitempty"`
	Filename      string                 `protobuf:"bytes,2,opt,name=filename,proto3" json:"filename,omitempty"`
	MaxSize       int32                  `protobuf:"varint,3,opt,name=maxSize,proto3" json:"maxSize,omitempty"`
	MaxAge        int32                  `protobuf:"varint,4,opt,name=maxAge,proto3" json:"maxAge,omitempty"`
	MaxBackups    int32                  `protobuf:"varint,5,opt,name=maxBackups,proto3" json:"maxBackups,omitempty"`
	Stdout        bool                   `protobuf:"varint,6,opt,name=stdout,proto3" json:"stdout,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Log) Reset() {
	*x = Log{}
	mi := &file_conf_conf_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Log) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Log) ProtoMessage() {}

func (x *Log) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Log.ProtoReflect.Descriptor instead.
func (*Log) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{4}
}

func (x *Log) GetLevel() string {
	if x != nil {
		return x.Level
	}
	return ""
}

func (x *Log) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *Log) GetMaxSize() int32 {
	if x != nil {
		return x.MaxSize
	}
	return 0
}

func (x *Log) GetMaxAge() int32 {
	if x != nil {
		return x.MaxAge
	}
	return 0
}

func (x *Log) GetMaxBackups() int32 {
	if x != nil {
		return x.MaxBackups
	}
	return 0
}

func (x *Log) GetStdout() bool {
	if x != nil {
		return x.Stdout
	}
	return false
}

type Snowflake struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	BaseTime          int64                  `protobuf:"varint,1,opt,name=BaseTime,proto3" json:"BaseTime,omitempty"`                   // 基础时间（ms单位），不能超过当前系统时间
	WorkerIdBitLength int32                  `protobuf:"varint,2,opt,name=WorkerIdBitLength,proto3" json:"WorkerIdBitLength,omitempty"` // 机器码位长，默认值6，取值范围 [1, 15]（要求：序列数位长+机器码位长不超过22）
	SeqBitLength      int32                  `protobuf:"varint,3,opt,name=SeqBitLength,proto3" json:"SeqBitLength,omitempty"`           // 序列数位长，默认值6，取值范围 [3, 21]（要求：序列数位长+机器码位长不超过22）
	MaxSeqNumber      int32                  `protobuf:"varint,4,opt,name=MaxSeqNumber,proto3" json:"MaxSeqNumber,omitempty"`           // 最大序列数（含），设置范围 [MinSeqNumber, 2^SeqBitLength-1]，默认值0，表示最大序列数取最大值（2^SeqBitLength-1]）
	MinSeqNumber      int32                  `protobuf:"varint,5,opt,name=MinSeqNumber,proto3" json:"MinSeqNumber,omitempty"`           // 最小序列数（含），默认值5，取值范围 [5, MaxSeqNumber]，每毫秒的前5个序列数对应编号0-4是保留位，其中1-4是时间回拨相应预留位，0是手工新值预留位
	LockKey           string                 `protobuf:"bytes,6,opt,name=LockKey,proto3" json:"LockKey,omitempty"`
	WorkerIdKey       string                 `protobuf:"bytes,7,opt,name=WorkerIdKey,proto3" json:"WorkerIdKey,omitempty"`
	WorkerIdIndexKey  string                 `protobuf:"bytes,8,opt,name=WorkerIdIndexKey,proto3" json:"WorkerIdIndexKey,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *Snowflake) Reset() {
	*x = Snowflake{}
	mi := &file_conf_conf_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Snowflake) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Snowflake) ProtoMessage() {}

func (x *Snowflake) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Snowflake.ProtoReflect.Descriptor instead.
func (*Snowflake) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{5}
}

func (x *Snowflake) GetBaseTime() int64 {
	if x != nil {
		return x.BaseTime
	}
	return 0
}

func (x *Snowflake) GetWorkerIdBitLength() int32 {
	if x != nil {
		return x.WorkerIdBitLength
	}
	return 0
}

func (x *Snowflake) GetSeqBitLength() int32 {
	if x != nil {
		return x.SeqBitLength
	}
	return 0
}

func (x *Snowflake) GetMaxSeqNumber() int32 {
	if x != nil {
		return x.MaxSeqNumber
	}
	return 0
}

func (x *Snowflake) GetMinSeqNumber() int32 {
	if x != nil {
		return x.MinSeqNumber
	}
	return 0
}

func (x *Snowflake) GetLockKey() string {
	if x != nil {
		return x.LockKey
	}
	return ""
}

func (x *Snowflake) GetWorkerIdKey() string {
	if x != nil {
		return x.WorkerIdKey
	}
	return ""
}

func (x *Snowflake) GetWorkerIdIndexKey() string {
	if x != nil {
		return x.WorkerIdIndexKey
	}
	return ""
}

type Jwt struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	System        *Jwt_Param             `protobuf:"bytes,1,opt,name=system,proto3" json:"system,omitempty"`
	Client        *Jwt_Param             `protobuf:"bytes,2,opt,name=client,proto3" json:"client,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Jwt) Reset() {
	*x = Jwt{}
	mi := &file_conf_conf_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Jwt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Jwt) ProtoMessage() {}

func (x *Jwt) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Jwt.ProtoReflect.Descriptor instead.
func (*Jwt) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{6}
}

func (x *Jwt) GetSystem() *Jwt_Param {
	if x != nil {
		return x.System
	}
	return nil
}

func (x *Jwt) GetClient() *Jwt_Param {
	if x != nil {
		return x.Client
	}
	return nil
}

type Server_HTTP struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Network       string                 `protobuf:"bytes,1,opt,name=network,proto3" json:"network,omitempty"`
	Addr          string                 `protobuf:"bytes,2,opt,name=addr,proto3" json:"addr,omitempty"`
	Timeout       int32                  `protobuf:"varint,3,opt,name=timeout,proto3" json:"timeout,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Server_HTTP) Reset() {
	*x = Server_HTTP{}
	mi := &file_conf_conf_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Server_HTTP) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Server_HTTP) ProtoMessage() {}

func (x *Server_HTTP) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Server_HTTP.ProtoReflect.Descriptor instead.
func (*Server_HTTP) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{2, 0}
}

func (x *Server_HTTP) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *Server_HTTP) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *Server_HTTP) GetTimeout() int32 {
	if x != nil {
		return x.Timeout
	}
	return 0
}

type Server_GRPC struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Network       string                 `protobuf:"bytes,1,opt,name=network,proto3" json:"network,omitempty"`
	Addr          string                 `protobuf:"bytes,2,opt,name=addr,proto3" json:"addr,omitempty"`
	Timeout       int32                  `protobuf:"varint,3,opt,name=timeout,proto3" json:"timeout,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Server_GRPC) Reset() {
	*x = Server_GRPC{}
	mi := &file_conf_conf_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Server_GRPC) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Server_GRPC) ProtoMessage() {}

func (x *Server_GRPC) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Server_GRPC.ProtoReflect.Descriptor instead.
func (*Server_GRPC) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{2, 1}
}

func (x *Server_GRPC) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *Server_GRPC) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *Server_GRPC) GetTimeout() int32 {
	if x != nil {
		return x.Timeout
	}
	return 0
}

type Data_Database struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Driver          string                 `protobuf:"bytes,1,opt,name=driver,proto3" json:"driver,omitempty"`
	Source          string                 `protobuf:"bytes,2,opt,name=source,proto3" json:"source,omitempty"`
	MaxIdleConns    int32                  `protobuf:"varint,5,opt,name=max_idle_conns,json=maxIdleConns,proto3" json:"max_idle_conns,omitempty"`
	MaxOpenConns    int32                  `protobuf:"varint,6,opt,name=max_open_conns,json=maxOpenConns,proto3" json:"max_open_conns,omitempty"`
	ConnMaxLifetime int32                  `protobuf:"varint,7,opt,name=conn_max_lifetime,json=connMaxLifetime,proto3" json:"conn_max_lifetime,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *Data_Database) Reset() {
	*x = Data_Database{}
	mi := &file_conf_conf_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Data_Database) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Data_Database) ProtoMessage() {}

func (x *Data_Database) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Data_Database.ProtoReflect.Descriptor instead.
func (*Data_Database) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{3, 0}
}

func (x *Data_Database) GetDriver() string {
	if x != nil {
		return x.Driver
	}
	return ""
}

func (x *Data_Database) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *Data_Database) GetMaxIdleConns() int32 {
	if x != nil {
		return x.MaxIdleConns
	}
	return 0
}

func (x *Data_Database) GetMaxOpenConns() int32 {
	if x != nil {
		return x.MaxOpenConns
	}
	return 0
}

func (x *Data_Database) GetConnMaxLifetime() int32 {
	if x != nil {
		return x.ConnMaxLifetime
	}
	return 0
}

type Data_Redis struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Network       string                 `protobuf:"bytes,1,opt,name=network,proto3" json:"network,omitempty"`
	Addr          string                 `protobuf:"bytes,2,opt,name=addr,proto3" json:"addr,omitempty"`
	ReadTimeout   int32                  `protobuf:"varint,3,opt,name=read_timeout,json=readTimeout,proto3" json:"read_timeout,omitempty"`
	WriteTimeout  int32                  `protobuf:"varint,4,opt,name=write_timeout,json=writeTimeout,proto3" json:"write_timeout,omitempty"`
	Password      string                 `protobuf:"bytes,5,opt,name=password,proto3" json:"password,omitempty"`
	Db            int32                  `protobuf:"varint,6,opt,name=db,proto3" json:"db,omitempty"`
	PoolSize      int32                  `protobuf:"varint,7,opt,name=pool_size,json=poolSize,proto3" json:"pool_size,omitempty"`
	MinIdleConns  int32                  `protobuf:"varint,8,opt,name=min_idle_conns,json=minIdleConns,proto3" json:"min_idle_conns,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Data_Redis) Reset() {
	*x = Data_Redis{}
	mi := &file_conf_conf_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Data_Redis) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Data_Redis) ProtoMessage() {}

func (x *Data_Redis) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Data_Redis.ProtoReflect.Descriptor instead.
func (*Data_Redis) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{3, 1}
}

func (x *Data_Redis) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *Data_Redis) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *Data_Redis) GetReadTimeout() int32 {
	if x != nil {
		return x.ReadTimeout
	}
	return 0
}

func (x *Data_Redis) GetWriteTimeout() int32 {
	if x != nil {
		return x.WriteTimeout
	}
	return 0
}

func (x *Data_Redis) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *Data_Redis) GetDb() int32 {
	if x != nil {
		return x.Db
	}
	return 0
}

func (x *Data_Redis) GetPoolSize() int32 {
	if x != nil {
		return x.PoolSize
	}
	return 0
}

func (x *Data_Redis) GetMinIdleConns() int32 {
	if x != nil {
		return x.MinIdleConns
	}
	return 0
}

type Jwt_Param struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Secret        string                 `protobuf:"bytes,1,opt,name=secret,proto3" json:"secret,omitempty"`
	Expire        int32                  `protobuf:"varint,2,opt,name=expire,proto3" json:"expire,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Jwt_Param) Reset() {
	*x = Jwt_Param{}
	mi := &file_conf_conf_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Jwt_Param) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Jwt_Param) ProtoMessage() {}

func (x *Jwt_Param) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Jwt_Param.ProtoReflect.Descriptor instead.
func (*Jwt_Param) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{6, 0}
}

func (x *Jwt_Param) GetSecret() string {
	if x != nil {
		return x.Secret
	}
	return ""
}

func (x *Jwt_Param) GetExpire() int32 {
	if x != nil {
		return x.Expire
	}
	return 0
}

var File_conf_conf_proto protoreflect.FileDescriptor

const file_conf_conf_proto_rawDesc = "" +
	"\n" +
	"\x0fconf/conf.proto\x12\n" +
	"kratos.api\"\xfb\x01\n" +
	"\tBootstrap\x12!\n" +
	"\x03env\x18\x01 \x01(\v2\x0f.kratos.api.EnvR\x03env\x12*\n" +
	"\x06server\x18\x02 \x01(\v2\x12.kratos.api.ServerR\x06server\x12$\n" +
	"\x04data\x18\x03 \x01(\v2\x10.kratos.api.DataR\x04data\x12!\n" +
	"\x03log\x18\x04 \x01(\v2\x0f.kratos.api.LogR\x03log\x123\n" +
	"\tsnowflake\x18\x05 \x01(\v2\x15.kratos.api.SnowflakeR\tsnowflake\x12!\n" +
	"\x03jwt\x18\x06 \x01(\v2\x0f.kratos.api.JwtR\x03jwt\"\x1d\n" +
	"\x03Env\x12\x16\n" +
	"\x06active\x18\x01 \x01(\tR\x06active\"\x82\x02\n" +
	"\x06Server\x12+\n" +
	"\x04http\x18\x01 \x01(\v2\x17.kratos.api.Server.HTTPR\x04http\x12+\n" +
	"\x04grpc\x18\x02 \x01(\v2\x17.kratos.api.Server.GRPCR\x04grpc\x1aN\n" +
	"\x04HTTP\x12\x18\n" +
	"\anetwork\x18\x01 \x01(\tR\anetwork\x12\x12\n" +
	"\x04addr\x18\x02 \x01(\tR\x04addr\x12\x18\n" +
	"\atimeout\x18\x03 \x01(\x05R\atimeout\x1aN\n" +
	"\x04GRPC\x12\x18\n" +
	"\anetwork\x18\x01 \x01(\tR\anetwork\x12\x12\n" +
	"\x04addr\x18\x02 \x01(\tR\x04addr\x12\x18\n" +
	"\atimeout\x18\x03 \x01(\x05R\atimeout\"\x8f\x04\n" +
	"\x04Data\x125\n" +
	"\bdatabase\x18\x01 \x01(\v2\x19.kratos.api.Data.DatabaseR\bdatabase\x12,\n" +
	"\x05redis\x18\x02 \x01(\v2\x16.kratos.api.Data.RedisR\x05redis\x1a\xb2\x01\n" +
	"\bDatabase\x12\x16\n" +
	"\x06driver\x18\x01 \x01(\tR\x06driver\x12\x16\n" +
	"\x06source\x18\x02 \x01(\tR\x06source\x12$\n" +
	"\x0emax_idle_conns\x18\x05 \x01(\x05R\fmaxIdleConns\x12$\n" +
	"\x0emax_open_conns\x18\x06 \x01(\x05R\fmaxOpenConns\x12*\n" +
	"\x11conn_max_lifetime\x18\a \x01(\x05R\x0fconnMaxLifetime\x1a\xec\x01\n" +
	"\x05Redis\x12\x18\n" +
	"\anetwork\x18\x01 \x01(\tR\anetwork\x12\x12\n" +
	"\x04addr\x18\x02 \x01(\tR\x04addr\x12!\n" +
	"\fread_timeout\x18\x03 \x01(\x05R\vreadTimeout\x12#\n" +
	"\rwrite_timeout\x18\x04 \x01(\x05R\fwriteTimeout\x12\x1a\n" +
	"\bpassword\x18\x05 \x01(\tR\bpassword\x12\x0e\n" +
	"\x02db\x18\x06 \x01(\x05R\x02db\x12\x1b\n" +
	"\tpool_size\x18\a \x01(\x05R\bpoolSize\x12$\n" +
	"\x0emin_idle_conns\x18\b \x01(\x05R\fminIdleConns\"\xa1\x01\n" +
	"\x03Log\x12\x14\n" +
	"\x05level\x18\x01 \x01(\tR\x05level\x12\x1a\n" +
	"\bfilename\x18\x02 \x01(\tR\bfilename\x12\x18\n" +
	"\amaxSize\x18\x03 \x01(\x05R\amaxSize\x12\x16\n" +
	"\x06maxAge\x18\x04 \x01(\x05R\x06maxAge\x12\x1e\n" +
	"\n" +
	"maxBackups\x18\x05 \x01(\x05R\n" +
	"maxBackups\x12\x16\n" +
	"\x06stdout\x18\x06 \x01(\bR\x06stdout\"\xa9\x02\n" +
	"\tSnowflake\x12\x1a\n" +
	"\bBaseTime\x18\x01 \x01(\x03R\bBaseTime\x12,\n" +
	"\x11WorkerIdBitLength\x18\x02 \x01(\x05R\x11WorkerIdBitLength\x12\"\n" +
	"\fSeqBitLength\x18\x03 \x01(\x05R\fSeqBitLength\x12\"\n" +
	"\fMaxSeqNumber\x18\x04 \x01(\x05R\fMaxSeqNumber\x12\"\n" +
	"\fMinSeqNumber\x18\x05 \x01(\x05R\fMinSeqNumber\x12\x18\n" +
	"\aLockKey\x18\x06 \x01(\tR\aLockKey\x12 \n" +
	"\vWorkerIdKey\x18\a \x01(\tR\vWorkerIdKey\x12*\n" +
	"\x10WorkerIdIndexKey\x18\b \x01(\tR\x10WorkerIdIndexKey\"\x9c\x01\n" +
	"\x03Jwt\x12-\n" +
	"\x06system\x18\x01 \x01(\v2\x15.kratos.api.Jwt.ParamR\x06system\x12-\n" +
	"\x06client\x18\x02 \x01(\v2\x15.kratos.api.Jwt.ParamR\x06client\x1a7\n" +
	"\x05Param\x12\x16\n" +
	"\x06secret\x18\x01 \x01(\tR\x06secret\x12\x16\n" +
	"\x06expire\x18\x02 \x01(\x05R\x06expireB\x18Z\x16kva/internal/conf;confb\x06proto3"

var (
	file_conf_conf_proto_rawDescOnce sync.Once
	file_conf_conf_proto_rawDescData []byte
)

func file_conf_conf_proto_rawDescGZIP() []byte {
	file_conf_conf_proto_rawDescOnce.Do(func() {
		file_conf_conf_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_conf_conf_proto_rawDesc), len(file_conf_conf_proto_rawDesc)))
	})
	return file_conf_conf_proto_rawDescData
}

var file_conf_conf_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_conf_conf_proto_goTypes = []any{
	(*Bootstrap)(nil),     // 0: kratos.api.Bootstrap
	(*Env)(nil),           // 1: kratos.api.Env
	(*Server)(nil),        // 2: kratos.api.Server
	(*Data)(nil),          // 3: kratos.api.Data
	(*Log)(nil),           // 4: kratos.api.Log
	(*Snowflake)(nil),     // 5: kratos.api.Snowflake
	(*Jwt)(nil),           // 6: kratos.api.Jwt
	(*Server_HTTP)(nil),   // 7: kratos.api.Server.HTTP
	(*Server_GRPC)(nil),   // 8: kratos.api.Server.GRPC
	(*Data_Database)(nil), // 9: kratos.api.Data.Database
	(*Data_Redis)(nil),    // 10: kratos.api.Data.Redis
	(*Jwt_Param)(nil),     // 11: kratos.api.Jwt.Param
}
var file_conf_conf_proto_depIdxs = []int32{
	1,  // 0: kratos.api.Bootstrap.env:type_name -> kratos.api.Env
	2,  // 1: kratos.api.Bootstrap.server:type_name -> kratos.api.Server
	3,  // 2: kratos.api.Bootstrap.data:type_name -> kratos.api.Data
	4,  // 3: kratos.api.Bootstrap.log:type_name -> kratos.api.Log
	5,  // 4: kratos.api.Bootstrap.snowflake:type_name -> kratos.api.Snowflake
	6,  // 5: kratos.api.Bootstrap.jwt:type_name -> kratos.api.Jwt
	7,  // 6: kratos.api.Server.http:type_name -> kratos.api.Server.HTTP
	8,  // 7: kratos.api.Server.grpc:type_name -> kratos.api.Server.GRPC
	9,  // 8: kratos.api.Data.database:type_name -> kratos.api.Data.Database
	10, // 9: kratos.api.Data.redis:type_name -> kratos.api.Data.Redis
	11, // 10: kratos.api.Jwt.system:type_name -> kratos.api.Jwt.Param
	11, // 11: kratos.api.Jwt.client:type_name -> kratos.api.Jwt.Param
	12, // [12:12] is the sub-list for method output_type
	12, // [12:12] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_conf_conf_proto_init() }
func file_conf_conf_proto_init() {
	if File_conf_conf_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_conf_conf_proto_rawDesc), len(file_conf_conf_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_conf_conf_proto_goTypes,
		DependencyIndexes: file_conf_conf_proto_depIdxs,
		MessageInfos:      file_conf_conf_proto_msgTypes,
	}.Build()
	File_conf_conf_proto = out.File
	file_conf_conf_proto_goTypes = nil
	file_conf_conf_proto_depIdxs = nil
}
